<<<<<<< Updated upstream
<<<<<<< Updated upstream
# Generated by Django 5.2.1 on 2025-06-16 14:14
=======
# Generated by Django 5.2.3 on 2025-06-16 17:02
>>>>>>> Stashed changes
=======
# Generated by Django 5.2.3 on 2025-06-16 17:02
>>>>>>> Stashed changes

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressId', models.AutoField(primary_key=True, serialize=False)),
                ('streetAddress', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('province', models.CharField(max_length=100)),
                ('postalCode', models.CharField(max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
            ],
            options={
                'db_table': 'address',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Citizen',
            fields=[
                ('idNumber', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('surname', models.CharField(max_length=100)),
                ('dateOfBirth', models.DateField()),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('homeLanguage', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'citizen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('details', models.TextField()),
            ],
            options={
                'db_table': 'activity_log',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('beneficiaryId', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('contactNumber', models.CharField(max_length=20)),
                ('relationshipToInsured', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'beneficiary',
            },
        ),
        migrations.CreateModel(
            name='FaceEncoding',
            fields=[
                ('id_number', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('encoding', models.BinaryField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'face_encoding',
            },
        ),
        migrations.CreateModel(
            name='FaceVerificationAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_number', models.CharField(max_length=20)),
                ('ip_address', models.GenericIPAddressField()),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('last_attempt', models.DateTimeField(auto_now=True)),
                ('locked_until', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'face_verification_attempt',
            },
        ),
        migrations.CreateModel(
            name='InsuredPerson',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('relationship_to_policy_holder', models.CharField(max_length=100)),
                ('id_number', models.CharField(max_length=20)),
                ('parent_id_number', models.CharField(blank=True, max_length=20, null=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.CharField(choices=[('alive', 'Alive'), ('deceased', 'Deceased')], default='alive', max_length=10)),
            ],
            options={
                'db_table': 'insuredperson',
            },
        ),
        migrations.CreateModel(
            name='Marriage',
            fields=[
                ('marriageId', models.AutoField(primary_key=True, serialize=False)),
                ('marriageDate', models.DateField()),
                ('marriageStatus', models.CharField(max_length=50)),
                ('marriageType', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('is_verified', models.BooleanField(default=False)),
                ('attempts', models.PositiveIntegerField(default=0)),
            ],
            options={
                'db_table': 'otp',
            },
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('policyId', models.AutoField(primary_key=True, serialize=False)),
                ('policyType', models.CharField(max_length=50)),
                ('premiumAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('startDate', models.DateField(blank=True, null=True)),
                ('endDate', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('active', 'Active'), ('expired', 'Expired')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiration_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'policy',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admin_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ifpwebapp_admin',
            },
        ),
        migrations.CreateModel(
            name='BirthCertificate',
            fields=[
                ('birthCertId', models.AutoField(primary_key=True, serialize=False)),
                ('placeOfBirth', models.CharField(max_length=100)),
                ('birthDate', models.DateField()),
                ('registeredBy', models.CharField(max_length=100)),
                ('registrationDate', models.DateField()),
                ('idNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
            ],
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('claimId', models.AutoField(primary_key=True, serialize=False)),
                ('dateFiled', models.DateField(auto_now_add=True)),
                ('claimAmount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(max_length=50)),
                ('beneficiaryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.beneficiary')),
                ('policyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policy')),
            ],
            options={
                'db_table': 'claim',
            },
        ),
        migrations.CreateModel(
            name='DeathCertificate',
            fields=[
                ('deathCertId', models.AutoField(primary_key=True, serialize=False)),
                ('deathDate', models.DateField()),
                ('causeOfDeath', models.CharField(max_length=255)),
                ('placeOfDeath', models.CharField(max_length=100)),
                ('idNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('documentId', models.AutoField(primary_key=True, serialize=False)),
                ('documentType', models.CharField(max_length=100)),
                ('issueDate', models.DateField()),
                ('expiryDate', models.DateField(blank=True, null=True)),
                ('documentStatus', models.CharField(max_length=50)),
                ('idNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
            ],
        ),
        migrations.CreateModel(
            name='FaceVerificationSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'face_verification_session',
            },
        ),
        migrations.CreateModel(
            name='FraudPreventionTeam',
            fields=[
                ('teamId', models.AutoField(primary_key=True, serialize=False)),
                ('contactNumber', models.CharField(max_length=20)),
                ('department', models.CharField(max_length=100)),
                ('investigatorName', models.CharField(max_length=255)),
                ('claimid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.claim')),
                ('policyid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policy')),
            ],
            options={
                'db_table': 'fraudpreventionteam',
            },
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('policy_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('expired', 'Expired')], default='pending', max_length=10)),
                ('notification_sent', models.BooleanField(default=False)),
                ('insured_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.insuredperson')),
            ],
            options={
                'db_table': 'approval_request',
            },
        ),
        migrations.CreateModel(
            name='MarriageParticipant',
            fields=[
                ('participantId', models.AutoField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=50)),
                ('marriageType', models.CharField(max_length=50)),
                ('citizenId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
                ('marriageId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.marriage')),
            ],
        ),
        migrations.CreateModel(
            name='Officer',
            fields=[
                ('officerID', models.AutoField(primary_key=True, serialize=False)),
                ('contactNumber', models.CharField(max_length=15)),
                ('department', models.CharField(max_length=50)),
                ('officerName', models.CharField(max_length=100)),
                ('claim', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.claim')),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('caseID', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=20)),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.officer')),
            ],
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('passportId', models.AutoField(primary_key=True, serialize=False)),
                ('issueDate', models.DateField()),
                ('expiryDate', models.DateField()),
                ('countryOfIssue', models.CharField(max_length=100)),
                ('idNumber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photoId', models.AutoField(primary_key=True, serialize=False)),
                ('imageData', models.BinaryField()),
                ('uploadDate', models.DateField(auto_now_add=True)),
                ('idNumber', models.ForeignKey(db_column='idNumber', on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.citizen')),
            ],
            options={
                'db_table': 'photo',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('approval_sent', 'Approval Sent'), ('approval_received', 'Approval Received'), ('policy_active', 'Policy Activated'), ('claim', 'Claim Notification')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('related_policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.policy')),
            ],
            options={
                'db_table': 'notification',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='insuredperson',
            name='policy_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policy'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='policy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policy'),
        ),
        migrations.CreateModel(
            name='PolicyHolder',
            fields=[
                ('id_number', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('name', models.CharField(max_length=200)),
                ('beneficiary_changes', models.IntegerField(default=0)),
                ('claims_last_year', models.IntegerField(default=0)),
                ('incomplete_documents', models.BooleanField(default=False)),
                ('activity_timeline', models.JSONField(default=list)),
                ('risk_score', models.FloatField(default=0.0)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='policyholder', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'policyholder',
            },
        ),
        migrations.AddField(
            model_name='policy',
            name='policyHolder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policyholder'),
        ),
        migrations.AddField(
            model_name='insuredperson',
            name='holder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policyholder'),
        ),
        migrations.AddField(
            model_name='claim',
            name='policyHolderId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IFPWebApp.policyholder'),
        ),
        migrations.CreateModel(
            name='Admin_notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.beneficiary')),
                ('case', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.case')),
                ('claim', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.claim')),
                ('fraud_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.fraudpreventionteam')),
                ('insured_person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.insuredperson')),
                ('officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.officer')),
                ('policy', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.policy')),
                ('policy_holder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='IFPWebApp.policyholder')),
            ],
            options={
                'db_table': 'admin_notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]
